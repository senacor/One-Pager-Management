name: CI

on:
  push:
  pull_request:

env:
  NODE_VERSION: '22.16.0'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'azure-functions'

jobs:
  check-functions:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'

    concurrency:
        group: 'SharePointTest' # Tests act on a real SharePoint-Repo, so they must not be run concurrently.

    steps:
      - uses: actions/checkout@v4
      - name: Setup Node ${{ env.NODE_VERSION }} Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/package-lock.json'
      - run: npm ci
      - run: npm run build
      - run: npm test
        env:
            SHAREPOINT_CLIENT_ID: "1621d264-a7bb-40b6-bfef-9b2839cb7eec"
            SHAREPOINT_TENANT_ID: "52497ec2-0945-4f55-8021-79766363dd96"
            SHAREPOINT_CLIENT_SECRET: ${{ secrets.SHAREPOINT_CLIENT_SECRET }}
      - name: Jest Test Report
        if: ${{ !cancelled() }} 
        uses: dorny/test-reporter@v2
        with:
          name: JEST Tests
          path: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/reports/jest-junit.xml'
          reporter: jest-junit
      - name: Cucumber Test Report
        if: ${{ !cancelled() }} 
        uses: dorny/test-reporter@v2
        with:
          name: Cucumber Tests
          path: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/reports/cucumber-report.xml'
          reporter: java-junit

  check-integration:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node ${{ env.NODE_VERSION }} Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/package-lock.json'
      - run: npm ci
      - run: npm run build
      - uses: JarvusInnovations/background-action@v1
        name: Bootstrap System Under Test (SUT)
        with:
          working-directory: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          run: |
            echo "Starting Azurite..."
            npx azurite &

            echo "Starting local Azure Functions..."
            STORAGE_SOURCE=localfile \
            ONE_PAGER_DIR=.storage/onepagers \
            VALIDATION_RESULT_DIR=.storage \
             npx azure-functions-core-tools start &
          wait-for: 5m
          wait-on: |
            http://localhost:7071
      - name: Check local running Functions
        run: |
            echo "create employee without one-pager"
            EMPLOYEE_DIR=.storage/onepagers/Max_Mustermann_1338
            mkdir -p "$EMPLOYEE_DIR"
            curl -XPOST --fail-with-body http://localhost:7071/api/validate/1338 2> /dev/null
            echo

            sleep 5 # wait for the function to finish processing

            echo "check if validation error was written"
            if ! jq -e 'index("MISSING_ONE_PAGER")' .storage/1338_validation.json >/dev/null; then
              echo 'File does not contain "MISSING_ONE_PAGER" in the array' >&2
              exit 1
            fi

  check-infra:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Test with Checkov
        id: checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          # This will add both a CLI output to the console and create a results.sarif file
          output_format: cli,sarif
          output_file_path: console,results.sarif
          directory: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/infra'
          framework: bicep
          soft_fail: true
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3

        # Results are generated only on a success or failure
        # this is required since GitHub by default won't run the next step
        # when the previous one has failed. Security checks that do not pass will 'fail'.
        # An alternative is to add `continue-on-error: true` to the previous step
        # Or 'soft_fail: true' to checkov.
        if: success() || failure()
        with:
          sarif_file: results.sarif
