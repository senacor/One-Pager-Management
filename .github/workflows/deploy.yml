name: Deploy

on:
  workflow_dispatch: 
    inputs:
      update-infra:
        description: 'Update infrastructure definitions'
        required: false
        default: 'false'

  push:
    branches:
      - main

env:
  NODE_VERSION: '22.x'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'azure-functions'

jobs:
  apply-infra-definitions:
    runs-on: ubuntu-latest
    concurrency:
        group: 'AzureInfra'
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            infra:
              - 'azure-functions/infra/**'
      - if: ${{ steps.changes.outputs.infra == 'true' && github.event.inputs.update-infra != 'false' }}
        name: 'Log in to Azure with AZ CLI'
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      - if: ${{ steps.changes.outputs.infra == 'true' && github.event.inputs.update-infra != 'false' }}
        name: apply infrastructure
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az deployment group create --debug --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} \
              --template-file ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/infra/main.bicep \
              --parameters functionAppName=${{ vars.FUNCTION_APP_NAME }} \
              --parameters sharepointClientSecret=${{ secrets.SHAREPOINT_CLIENT_SECRET }} \

  deploy-functions:
    runs-on: windows-latest
    concurrency:
        group: 'AzureInfra'
    permissions:
      contents: read
      id-token: write
    needs: apply-infra-definitions
    steps:
      - uses: actions/checkout@v4
      - name: 'Log in to Azure with AZ CLI'
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      - name: Setup Node ${{ env.NODE_VERSION }} Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/package-lock.json'
      - run: |
          pushd "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
          npm ci
          npm run build
          npm prune --production
          popd
      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ vars.FUNCTION_APP_NAME }}
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
